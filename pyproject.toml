[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "luna-face-recog"
version = "1.0.0"
description = "A modern GPU-accelerated face recognition toolkit (ArcFace + InsightFace)"
readme = "README.md"
license = {text = "MIT"}
authors = [{name = "Luna Face Recognition Team"}]
requires-python = ">=3.8"
keywords = ["face-recognition", "computer-vision", "pytorch", "insightface", "arcface"]
classifiers = [
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Operating System :: OS Independent",
  "License :: OSI Approved :: MIT License",
  "Topic :: Scientific/Engineering :: Artificial Intelligence",
]
# Placeholder dependencies; sync with setup.py / requirements
# (you can run: pip install .[dev])
dependencies = [
  "torch>=1.9.0",
  "torchvision>=0.10.0",
  "numpy>=1.21.0",
  "opencv-python>=4.5.0",
  "Pillow>=8.0.0",
  "tqdm>=4.62.0",
  "insightface>=0.7.3",
  # core avoids heavy analytics libs by default; they are available via extras
]

[project.optional-dependencies]
dev = [
  "black>=23.0.0",
  "isort>=5.12.0",
  "pytest>=7.0.0",
  "mypy>=1.0.0",
  "types-requests",
  "types-Pillow",
  "build",
  "twine"
]
bench = ["pyinstrument", "rich", "pandas>=1.3.0", "scikit-learn>=1.0.0", "matplotlib>=3.5.0"]
api = ["fastapi>=0.110.0", "uvicorn>=0.23.0"]
analysis = ["pandas>=1.3.0", "scikit-learn>=1.0.0", "matplotlib>=3.5.0"]

[project.scripts]
luna-face = "luna_face_recog.cli:main"
luna-face-api = "luna_face_recog.api_server:app"

[project.urls]
Homepage = "https://github.com/LSDJesus/Luna_face_recog"
Issues = "https://github.com/LSDJesus/Luna_face_recog/issues"

[tool.setuptools.packages.find]
where = ["."]
include = ["luna_face_recog*", "scripts*"]

[tool.black]
line-length = 100
target-version = ["py39"]

[tool.isort]
profile = "black"

[tool.mypy]
python_version = "3.9"
ignore_missing_imports = true
strict_optional = false
warn_unused_ignores = true
warn_redundant_casts = true
warn_unused_configs = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-q"
python_files = ["test_*.py"]
testpaths = ["tests"]
filterwarnings = [
  "ignore::DeprecationWarning",
]
